import util.assert


assert_equal {}.size, 0
assert_equal {'a':1, 'b':2, 'c':3}.size, 3
assert_equal {}.empty, true

assert_equal {foo=1, bar=2}, {'foo':1, 'bar':2}
assert_equal {foo=1, bar=2}.to_set(), Set(Entry('foo', 1), Entry('bar', 2))

assert_true {'foo':1, 'bar':2} == {'foo':1, 'bar':2}
assert_true {'foo':1, 'bar':2} != {'hoge':3, 'piyo':4}

assert_true 'foo' in {'foo':1, 'bar':2}
assert_false 'piyo' in {'foo':1, 'bar':2}

for p in {foo=1} {
	assert_equal p.key, 'foo'
	assert_equal p.value, 1
}

let map = {}
map['foo'] = 1
map.bar = 2
assert_equal map, {foo = 1, 'bar':2}
map.delete 'foo'
assert_equal map, {bar = 2}
map.clear()
assert_equal map, {}

assert_error () => map['foo'], IndexError

